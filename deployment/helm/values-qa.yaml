# Custom values for QA deployment in duploservices-qa4 namespace
# This file extends the base values.yaml with QA-specific settings

replicaCount: 1

image:
  repository: rahulnutakki/devprotal
  tag: "latest"
  pullPolicy: Always

# Node selector for Duplo tenant deployment
nodeSelector:
  tenantname: duploservices-qa4

# Security context - use system user
podSecurityContext:
  fsGroup: 65534

securityContext:
  runAsNonRoot: true
  runAsUser: 65534
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 7007

# Ingress configuration
ingress:
  enabled: true
  className: alb
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:ACCOUNT_ID:certificate/CERT_ID
  hosts:
    - host: backstage-qa.radiantlogic.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: backstage-gitops-tls
      hosts:
        - backstage-qa.radiantlogic.com

# Resource limits for QA environment
resources:
  limits:
    cpu: 500m
    memory: 768Mi
  requests:
    cpu: 250m
    memory: 512Mi

# Disable autoscaling for QA
autoscaling:
  enabled: false

# PostgreSQL Configuration
postgres:
  enabled: true
  image:
    repository: postgres
    tag: "14"
  storage:
    size: 10Gi
    storageClass: "gp3"
  host: postgres-service
  port: 5432
  database: backstage
  username: backstage
  nodeSelector:
    tenantname: duploservices-qa4

# GitHub Configuration
github:
  organization: radiantlogic-saas

# ArgoCD Configuration
argocd:
  enabled: true
  url: https://argocd-qa.radiantlogic.com

# Backstage App Configuration
backstage:
  baseUrl: https://backstage-qa.radiantlogic.com
  logLevel: debug

# Secret references
secrets:
  name: backstage-secrets
  githubToken:
    key: GITHUB_TOKEN
  argoCdToken:
    key: ARGOCD_TOKEN
  postgresPassword:
    key: POSTGRES_PASSWORD
