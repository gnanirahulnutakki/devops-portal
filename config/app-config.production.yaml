# Production configuration for Backstage GitOps Portal
# This file extends app-config.yaml with production-specific settings

app:
  # Base URL should be set via environment variable or overridden in deployment
  baseUrl: ${BACKSTAGE_BASE_URL}

backend:
  # Base URL should be set via environment variable
  baseUrl: ${BACKSTAGE_BASE_URL}

  listen:
    port: 7007
    host: 0.0.0.0

  # CORS configuration for production
  cors:
    origin: ${BACKSTAGE_BASE_URL}
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true

  # Database configuration - use environment variables
  database:
    client: pg
    connection: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable

  # Cache configuration
  cache:
    store: memory

  # Reading configuration
  reading:
    allow:
      - host: '*.githubusercontent.com'
      - host: 'raw.githubusercontent.com'

# GitHub Integration - use environment variable for token
integrations:
  github:
    - host: github.com
      token: ${GITHUB_TOKEN}

# GitOps Plugin Configuration
gitops:
  github:
    organization: ${GITHUB_ORG}
    token: ${GITHUB_TOKEN}

  argocd:
    enabled: ${ARGOCD_ENABLED}
    url: ${ARGOCD_URL}
    token: ${ARGOCD_TOKEN}

  grafana:
    enabled: ${GRAFANA_ENABLED}
    url: ${GRAFANA_URL}
    apiKey: ${GRAFANA_API_KEY}

# Catalog configuration
catalog:
  rules:
    - allow: [Component, System, API, Resource, Location]

  locations: []

# Authentication - disabled for now, can be enabled later
auth:
  environment: production

  providers: {}

# Scaffolder configuration
scaffolder:
  defaultAuthor:
    name: Backstage GitOps
    email: backstage@radiantlogic.com
  defaultCommitMessage: 'Changes from Backstage GitOps Portal'

# Proxy configuration for external services
proxy:
  '/argocd/api':
    target: ${ARGOCD_URL}/api/v1/
    changeOrigin: true
    secure: false
    headers:
      Authorization: Bearer ${ARGOCD_TOKEN}

  '/grafana/api':
    target: ${GRAFANA_URL}
    changeOrigin: true
    headers:
      Authorization: Bearer ${GRAFANA_API_KEY}

# Logging
logging:
  level: ${LOG_LEVEL}
  format: json
