apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backstage-gitops.fullname" . }}
  labels:
    {{- include "backstage-gitops.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "backstage-gitops.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "backstage-gitops.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "backstage-gitops.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              until nc -z {{ include "backstage-gitops.postgres.serviceName" . }} {{ .Values.postgres.port }}; do
                echo "Waiting for PostgreSQL to be ready..."
                sleep 2
              done
              echo "PostgreSQL is ready!"
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 7007
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            # Backstage Configuration
            - name: BACKSTAGE_BASE_URL
              value: {{ .Values.backstage.baseUrl | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.backstage.logLevel | quote }}

            # Database Configuration
            - name: POSTGRES_HOST
              value: {{ include "backstage-gitops.postgres.serviceName" . | quote }}
            - name: POSTGRES_PORT
              value: {{ .Values.postgres.port | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.postgres.username | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.database | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: {{ .Values.secrets.postgresPassword.key }}

            # GitHub Configuration
            - name: GITHUB_ORG
              value: {{ .Values.github.organization | quote }}
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: {{ .Values.secrets.githubToken.key }}

            # ArgoCD Configuration
            - name: ARGOCD_ENABLED
              value: {{ .Values.argocd.enabled | quote }}
            {{- if .Values.argocd.enabled }}
            - name: ARGOCD_URL
              value: {{ .Values.argocd.url | quote }}
            - name: ARGOCD_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: {{ .Values.secrets.argoCdToken.key }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "backstage-gitops.fullname" . }}-config
          volumeMounts:
            - name: app-config
              mountPath: /app/app-config.production.yaml
              subPath: app-config.production.yaml
              readOnly: true
      volumes:
        - name: app-config
          configMap:
            name: {{ include "backstage-gitops.fullname" . }}-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
